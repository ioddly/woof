- write basic prelude
- variables
x local variables
- throw/catch
- embedded programming
-- ROM support -- can we support storing and reading forth code from ROM for maximum memory usage?
- safety
-- better error reporting: format messages
-- switch memory addresses to relative to forth, and only allow references to into forth
-- safer C function calls, do something to validate that C functions are real
-- as a basic safety rubric, lets do enough to make it never segfault but nothing beyond that (type safety etc)
- DX
-- stack traces
- code cleanliness
-- audit use of cell, it's kind of weird
-- sometimes i use it to retrieve pointers, other times to set pointers
-- maybe it should track actual offset in memory? rather than being raw bits
- loops of some kind
- console game of life
- gfx bindings
- graphical game of life
- optimization
-- a pretty simple optimization would be to inline a lot of c words like arithmetic as opcodes
-- a less simple optimization would be to compile to machine code, but still fairly easy compared to writing one for a high level language
-- dispatch tables for the VM